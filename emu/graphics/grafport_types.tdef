// Copyright (c) 2022, Jordan Werthman
// SPDX-License-Identifier: BSD-2-Clause

@include("gen/typegen/base_types.tdef")

type RegionHandle: Handle;

// Link: http://0.0.0.0:8000/docs/mac/QuickDraw/QuickDraw-57.html#HEADING57-39
struct Point {
  y: i16;
  x: i16;
}

// Link: http://0.0.0.0:8000/docs/mac/QuickDraw/QuickDraw-57.html#HEADING57-39
struct Rect {
  top: i16;
  left: i16;
  bottom: i16; 
  right: i16; 
}

// Link: http://0.0.0.0:8000/docs/mac/QuickDraw/QuickDraw-57.html#HEADING57-39
struct BitMap {
  base_addr: Ptr;
  row_bytes: Integer;
  bounds: Rect;
}

// Link: http://0.0.0.0:8000/docs/mac/QuickDraw/QuickDraw-57.html#HEADING57-39
struct Region {
  region_size: Integer;
  bounding_box: Rect;
  // More data if not rectangular
}

// Link: http://0.0.0.0:8000/docs/mac/QuickDraw/QuickDraw-196.html#HEADING196-146
struct Pattern {
  bytes: u8[8];
}

// Link: http://0.0.0.0:8000/docs/mac/QuickDraw/QuickDraw-57.html#HEADING57-39
struct GrafPort {
  device: Integer;
  port_bits: BitMap;
  port_rect: Rect;
  visible_region: RegionHandle;
  clip_region: RegionHandle;
  back_pattern: Pattern;
  fill_pattern: Pattern;
  pen_location: Point;
  pen_size: Point;
  pattern_mode: Integer;
  pen_pattern: Pattern;
  pen_visiblity: Integer;
  text_font: Integer;
  text_face: Integer;
  text_mode: Integer;
  text_size: Integer;
  extra_space: Fixed;
  foreground_color: u32;
  background_color: u32;
  color_bit: Integer;
  // Everything below used internally:
  pattern_stretch: Integer;  
  pict_save: Handle;
  region_save: Handle;
  polygon_save: Handle;
  graf_procs: Ptr;
}

// Link: http://0.0.0.0:8000/docs/mac/QuickDraw/QuickDraw-405.html#HEADING405-37
struct Cursor {
  data: u8[32];
  mask: u8[32];
  hotspot: u32;
}

// Link: http://0.0.0.0:8000/docs/mac/QuickDraw/QuickDraw-30.html#MARKER-9-1
// Fields are listed in reverse order since the QDGlobals are below the
// A5 World and thus referenced as negative offsets from it
struct QDGlobals {
  random_seed: u32;
  screen_bits: BitMap;
  arrow: Cursor;
  dark_grey: Pattern;
  light_grey: Pattern;
  grey: Pattern;
  black: Pattern;
  white: Pattern;
  the_port: Ptr;
}

struct ItemHeader {
  item: Handle;
  box: Rect;
  type_and_disabled: u8;
}
struct SFReply {
  good: bool;      // FALSE if ignore command
  copy: bool;      // not used
  f_type: OSType;     // file type or not used
  v_ref_num: Integer; // volume reference number
  version: Integer;   // file's version number
  file_name: str;     // STRING[63]
}

struct RGBColor {
  red: u16;
  green: u16;
  blue: u16;
}