#include "disasm_trap.h"

absl::string_view GetTrapName(uint16_t trap) {
  switch (trap) {
    case 0xABC3:
      return "QuickDraw::NQDMisc";
    case 0xA817:
      return "QuickDraw::CopyMask";
    case 0xA837:
      return "QuickDraw::MeasureText";
    case 0xA836:
      return "QuickDraw::GetMaskTable";
    case 0xA838:
      return "QuickDraw::CalcMask";
    case 0xA839:
      return "QuickDraw::SeedFill";
    case 0xA850:
      return "QuickDraw::InitCursor";
    case 0xA851:
      return "QuickDraw::SetCursor";
    case 0xA852:
      return "QuickDraw::HideCursor";
    case 0xA853:
      return "QuickDraw::ShowCursor";
    case 0xA855:
      return "QuickDraw::ShieldCursor";
    case 0xA856:
      return "QuickDraw::ObscureCursor";
    case 0xA858:
      return "QuickDraw::BitAnd";
    case 0xA859:
      return "QuickDraw::BitXOr";
    case 0xA85A:
      return "QuickDraw::BitNot";
    case 0xA85B:
      return "QuickDraw::BitOr";
    case 0xA85C:
      return "QuickDraw::BitShift";
    case 0xA85D:
      return "QuickDraw::BitTst";
    case 0xA85E:
      return "QuickDraw::BitSet";
    case 0xA85F:
      return "QuickDraw::BitClr";
    case 0xA861:
      return "QuickDraw::Random";
    case 0xA862:
      return "QuickDraw::ForeColor";
    case 0xA863:
      return "QuickDraw::BackColor";
    case 0xA864:
      return "QuickDraw::ColorBit";
    case 0xA865:
      return "QuickDraw::GetPixel";
    case 0xA866:
      return "QuickDraw::StuffHex";
    case 0xA867:
      return "QuickDraw::LongMul";
    case 0xA868:
      return "QuickDraw::FixMul";
    case 0xA869:
      return "QuickDraw::FixRatio";
    case 0xA86A:
      return "QuickDraw::HiWord";
    case 0xA86B:
      return "QuickDraw::LoWord";
    case 0xA86C:
      return "QuickDraw::FixRound";
    case 0xA86D:
      return "QuickDraw::InitPort";
    case 0xA86E:
      return "QuickDraw::InitGraf";
    case 0xA86F:
      return "QuickDraw::OpenPort";
    case 0xA870:
      return "QuickDraw::LocalToGlobal";
    case 0xA871:
      return "QuickDraw::GlobalToLocal";
    case 0xA872:
      return "QuickDraw::GrafDevice";
    case 0xA873:
      return "QuickDraw::SetPort";
    case 0xA874:
      return "QuickDraw::GetPort";
    case 0xA875:
      return "QuickDraw::SetPBits";
    case 0xA876:
      return "QuickDraw::PortSize";
    case 0xA877:
      return "QuickDraw::MovePortTo";
    case 0xA878:
      return "QuickDraw::SetOrigin";
    case 0xA879:
      return "QuickDraw::SetClip";
    case 0xA87A:
      return "QuickDraw::GetClip";
    case 0xA87B:
      return "QuickDraw::ClipRect";
    case 0xA87C:
      return "QuickDraw::BackPat";
    case 0xA87D:
      return "QuickDraw::ClosePort";
    case 0xA87E:
      return "QuickDraw::AddPt";
    case 0xA87F:
      return "QuickDraw::SubPt";
    case 0xA880:
      return "QuickDraw::SetPt";
    case 0xA881:
      return "QuickDraw::EqualPt";
    case 0xA882:
      return "QuickDraw::StdText";
    case 0xA883:
      return "QuickDraw::DrawChar";
    case 0xA884:
      return "QuickDraw::DrawString";
    case 0xA885:
      return "QuickDraw::DrawText";
    case 0xA886:
      return "QuickDraw::TextWidth";
    case 0xA887:
      return "QuickDraw::TextFont";
    case 0xA888:
      return "QuickDraw::TextFace";
    case 0xA889:
      return "QuickDraw::TextMode";
    case 0xA88A:
      return "QuickDraw::TextSize";
    case 0xA88B:
      return "QuickDraw::GetFontInfo";
    case 0xA88C:
      return "QuickDraw::StringWidth";
    case 0xA88D:
      return "QuickDraw::CharWidth";
    case 0xA88E:
      return "QuickDraw::SpaceExtra";
    case 0xA890:
      return "QuickDraw::StdLine";
    case 0xA891:
      return "QuickDraw::LineTo";
    case 0xA892:
      return "QuickDraw::Line";
    case 0xA893:
      return "QuickDraw::MoveTo";
    case 0xA894:
      return "QuickDraw::Move";
    case 0xA895:
      return "QuickDraw::ShutDown";
    case 0xA896:
      return "QuickDraw::HidePen";
    case 0xA897:
      return "QuickDraw::ShowPen";
    case 0xA898:
      return "QuickDraw::GetPenState";
    case 0xA899:
      return "QuickDraw::SetPenState";
    case 0xA89A:
      return "QuickDraw::GetPen";
    case 0xA89B:
      return "QuickDraw::PenSize";
    case 0xA89C:
      return "QuickDraw::PenMode";
    case 0xA89D:
      return "QuickDraw::PenPat";
    case 0xA89E:
      return "QuickDraw::PenNormal";
    case 0xA89F:
      return "QuickDraw::Unimplemented";
    case 0xA8A0:
      return "QuickDraw::StdRect";
    case 0xA8A1:
      return "QuickDraw::FrameRect";
    case 0xA8A2:
      return "QuickDraw::PaintRect";
    case 0xA8A3:
      return "QuickDraw::EraseRect";
    case 0xA8A4:
      return "QuickDraw::InverRect";
    case 0xA8A5:
      return "QuickDraw::FillRect";
    case 0xA8A6:
      return "QuickDraw::EqualRect";
    case 0xA8A7:
      return "QuickDraw::SetRect";
    case 0xA8A8:
      return "QuickDraw::OffsetRect";
    case 0xA8A9:
      return "QuickDraw::InsetRect";
    case 0xA8AA:
      return "QuickDraw::SectRect";
    case 0xA8AB:
      return "QuickDraw::UnionRect";
    case 0xA8AC:
      return "QuickDraw::Pt2Rect";
    case 0xA8AD:
      return "QuickDraw::PtInRect";
    case 0xA8AE:
      return "QuickDraw::EmptyRect";
    case 0xA8AF:
      return "QuickDraw::StdRRect";
    case 0xA8B0:
      return "QuickDraw::FrameRoundRect";
    case 0xA8B1:
      return "QuickDraw::PaintRoundRect";
    case 0xA8B2:
      return "QuickDraw::EraseRoundRect";
    case 0xA8B3:
      return "QuickDraw::InverRoundRect";
    case 0xA8B4:
      return "QuickDraw::FillRoundRect";
    case 0xA8B6:
      return "QuickDraw::StdOval";
    case 0xA8B7:
      return "QuickDraw::FrameOval";
    case 0xA8B8:
      return "QuickDraw::PaintOval";
    case 0xA8B9:
      return "QuickDraw::EraseOval";
    case 0xA8BA:
      return "QuickDraw::InvertOval";
    case 0xA8BB:
      return "QuickDraw::FillOval";
    case 0xA8BC:
      return "QuickDraw::SlopeFromAngle";
    case 0xA8BD:
      return "QuickDraw::StdArc";
    case 0xA8BE:
      return "QuickDraw::FrameArc";
    case 0xA8BF:
      return "QuickDraw::PaintArc";
    case 0xA8C0:
      return "QuickDraw::EraseArc";
    case 0xA8C1:
      return "QuickDraw::InvertArc";
    case 0xA8C2:
      return "QuickDraw::FillArc";
    case 0xA8C3:
      return "QuickDraw::PtToAngle";
    case 0xA8C4:
      return "QuickDraw::AngleFromSlope";
    case 0xA8C5:
      return "QuickDraw::StdPoly";
    case 0xA8C6:
      return "QuickDraw::FramePoly";
    case 0xA8C7:
      return "QuickDraw::PaintPoly";
    case 0xA8C8:
      return "QuickDraw::ErasePoly";
    case 0xA8C9:
      return "QuickDraw::InvertPoly";
    case 0xA8CA:
      return "QuickDraw::FillPoly";
    case 0xA8CB:
      return "QuickDraw::OpenPoly";
    case 0xA8CC:
      return "QuickDraw::ClosePoly";
    case 0xA8CD:
      return "QuickDraw::KillPoly";
    case 0xA8CE:
      return "QuickDraw::OffsetPoly";
    case 0xA8CF:
      return "QuickDraw::PackBits";
    case 0xA8D0:
      return "QuickDraw::UnpackBits";
    case 0xA8D1:
      return "QuickDraw::StdRgn";
    case 0xA8D2:
      return "QuickDraw::FrameRgn";
    case 0xA8D3:
      return "QuickDraw::PaintRgn";
    case 0xA8D4:
      return "QuickDraw::EraseRgn";
    case 0xA8D5:
      return "QuickDraw::InverRgn";
    case 0xA8D6:
      return "QuickDraw::FillRgn";
    case 0xA8D7:
      return "QuickDraw::BitMapToRegion";
    case 0xA8D8:
      return "QuickDraw::NewRgn";
    case 0xA8D9:
      return "QuickDraw::DisposeRgn";
    case 0xA8DA:
      return "QuickDraw::OpenRgn";
    case 0xA8DB:
      return "QuickDraw::CloseRgn";
    case 0xA8DC:
      return "QuickDraw::CopyRgn";
    case 0xA8DD:
      return "QuickDraw::SetEmptyRgn";
    case 0xA8DE:
      return "QuickDraw::SetRecRgn";
    case 0xA8DF:
      return "QuickDraw::RectRgn";
    case 0xA8E0:
      return "QuickDraw::OffsetRgn";
    case 0xA8E1:
      return "QuickDraw::InsetRgn";
    case 0xA8E2:
      return "QuickDraw::EmptyRgn";
    case 0xA8E3:
      return "QuickDraw::EqualRgn";
    case 0xA8E4:
      return "QuickDraw::SectRgn";
    case 0xA8E5:
      return "QuickDraw::UnionRgn";
    case 0xA8E6:
      return "QuickDraw::DiffRgn";
    case 0xA8E7:
      return "QuickDraw::XOrRgn";
    case 0xA8E8:
      return "QuickDraw::PtInRgn";
    case 0xA8E9:
      return "QuickDraw::RectInRgn";
    case 0xA8EA:
      return "QuickDraw::SetStdProcs";
    case 0xA8EB:
      return "QuickDraw::StdBits";
    case 0xA8EC:
      return "QuickDraw::CopyBits";
    case 0xA8ED:
      return "QuickDraw::StdTxMeas";
    case 0xA8EE:
      return "QuickDraw::StdGetPic";
    case 0xA8EF:
      return "QuickDraw::ScrollRect";
    case 0xA8F0:
      return "QuickDraw::StdPutPic";
    case 0xA8F1:
      return "QuickDraw::StdComment";
    case 0xA8F2:
      return "QuickDraw::PicComment";
    case 0xA8F3:
      return "QuickDraw::OpenPicture";
    case 0xA8F4:
      return "QuickDraw::ClosePicture";
    case 0xA8F5:
      return "QuickDraw::KillPicture";
    case 0xA8F6:
      return "QuickDraw::DrawPicture";
    case 0xA8F7:
      return "QuickDraw::Layout";
    case 0xA8F8:
      return "QuickDraw::ScalePt";
    case 0xA8F9:
      return "QuickDraw::MapPt";
    case 0xA8FA:
      return "QuickDraw::MapRect";
    case 0xA8FB:
      return "QuickDraw::MapRgn";
    case 0xA8FC:
      return "QuickDraw::MapPoly";
    case 0xA80D:
      return "ResourceManager::Count1Resources";
    case 0xA80E:
      return "ResourceManager::Get1IxResource";
    case 0xA80F:
      return "ResourceManager::Get1IxType";
    case 0xA810:
      return "ResourceManager::Unique1ID";
    case 0xA81A:
      return "ResourceManager::HOpenResFile";
    case 0xA81B:
      return "ResourceManager::HCreateResFile";
    case 0xA81C:
      return "ResourceManager::Count1Types";
    case 0xA81F:
      return "ResourceManager::Get1Resource";
    case 0xA820:
      return "ResourceManager::Get1NamedResource";
    case 0xA822:
      return "ResourceManager::ResourceDispatch";
    case 0xA821:
      return "ResourceManager::MaxSizeRsrc";
    case 0xA992:
      return "ResourceManager::DetachResource";
    case 0xA993:
      return "ResourceManager::SetResPurge";
    case 0xA994:
      return "ResourceManager::CurResFile";
    case 0xA995:
      return "ResourceManager::InitResources";
    case 0xA996:
      return "ResourceManager::RsrcZoneInit";
    case 0xA997:
      return "ResourceManager::OpenResFile";
    case 0xA998:
      return "ResourceManager::UseResFile";
    case 0xA999:
      return "ResourceManager::UpdateResFile";
    case 0xA99A:
      return "ResourceManager::CloseResFile";
    case 0xA99B:
      return "ResourceManager::SetResLoad";
    case 0xA99C:
      return "ResourceManager::CountResources";
    case 0xA99D:
      return "ResourceManager::GetIndResource";
    case 0xA99E:
      return "ResourceManager::CountTypes";
    case 0xA99F:
      return "ResourceManager::GetIndType";
    case 0xA9A0:
      return "ResourceManager::GetResource";
    case 0xA9A1:
      return "ResourceManager::GetNamedResource";
    case 0xA9A2:
      return "ResourceManager::LoadResource";
    case 0xA9A3:
      return "ResourceManager::ReleaseResource";
    case 0xA9A4:
      return "ResourceManager::HomeResFile";
    case 0xA9A5:
      return "ResourceManager::SizeRsrc";
    case 0xA9A6:
      return "ResourceManager::GetResAttrs";
    case 0xA9A7:
      return "ResourceManager::SetResAttrs";
    case 0xA9A8:
      return "ResourceManager::GetResInfo";
    case 0xA9A9:
      return "ResourceManager::SetResInfo";
    case 0xA9AA:
      return "ResourceManager::ChangedResource";
    case 0xA9AB:
      return "ResourceManager::AddResource";
    case 0xA9AC:
      return "ResourceManager::AddReference";
    case 0xA9AD:
      return "ResourceManager::RmveResource";
    case 0xA9AE:
      return "ResourceManager::RmveReference";
    case 0xA9AF:
      return "ResourceManager::ResError";
    case 0xA9B0:
      return "ResourceManager::WriteResource";
    case 0xA9B1:
      return "ResourceManager::CreateResFile";
    case 0xA811:
      return "TextEdit::TESelView";
    case 0xA812:
      return "TextEdit::TEPinScroll";
    case 0xA813:
      return "TextEdit::TEAutoView";
    case 0xA9CB:
      return "TextEdit::TEGetText";
    case 0xA9CC:
      return "TextEdit::TEInit";
    case 0xA9CD:
      return "TextEdit::TEDispose";
    case 0xA9CE:
      return "TextEdit::TETextBox";
    case 0xA9CF:
      return "TextEdit::TESetText";
    case 0xA9D0:
      return "TextEdit::TECalText";
    case 0xA9D1:
      return "TextEdit::TESetSelect";
    case 0xA9D2:
      return "TextEdit::TENew";
    case 0xA9D3:
      return "TextEdit::TEUpdate";
    case 0xA9D4:
      return "TextEdit::TEClick";
    case 0xA9D5:
      return "TextEdit::TECopy";
    case 0xA9D6:
      return "TextEdit::TECut";
    case 0xA9D7:
      return "TextEdit::TEDelete";
    case 0xA9D8:
      return "TextEdit::TEActivate";
    case 0xA9D9:
      return "TextEdit::TEDeactivate";
    case 0xA9DA:
      return "TextEdit::TEIdle";
    case 0xA9DB:
      return "TextEdit::TEPaste";
    case 0xA9DC:
      return "TextEdit::TEKey";
    case 0xA9DD:
      return "TextEdit::TEScroll";
    case 0xA9DE:
      return "TextEdit::TEInsert";
    case 0xA9DF:
      return "TextEdit::TESetAlignment";
    case 0xA83C:
      return "TextEdit::TEGetOffset";
    case 0xA83D:
      return "TextEdit::TEDispatch";
    case 0xA83E:
      return "TextEdit::TEStyleNew";
    case 0xA0FE:
      return "TextEdit::TEFindWord";
    case 0xA0FF:
      return "TextEdit::TEFindLine";
    case 0xA816:
      return "Pack8";
    case 0xA818:
      return "FixATan2";
    case 0xA819:
      return "XMunger";
    case 0xA827:
      return "HideDialogItem";
    case 0xA828:
      return "ShowDialogItem";
    case 0xA82B:
      return "Pack9";
    case 0xA82C:
      return "Pack10";
    case 0xA82D:
      return "Pack11";
    case 0xA82E:
      return "Pack12";
    case 0xA82F:
      return "Pack13";
    case 0xA830:
      return "Pack14";
    case 0xA831:
      return "Pack15";
    case 0xA833:
      return "ScrnBitMap";
    case 0xA834:
      return "SetFScaleDisable";
    case 0xA835:
      return "FontMetrics";
    case 0xA83A:
      return "ZoomWindow";
    case 0xA83B:
      return "TrackBox";
    case 0xA8FD:
      return "PrGlue";
    case 0xA8FE:
      return "InitFonts";
    case 0xA8FF:
      return "GetFName";
    case 0xA900:
      return "GetFNum";
    case 0xA901:
      return "FMSwapFont";
    case 0xA902:
      return "RealFont";
    case 0xA903:
      return "SetFontLock";
    case 0xA904:
      return "DrawGrowIcon";
    case 0xA905:
      return "DragGrayRgn";
    case 0xA906:
      return "NewString";
    case 0xA907:
      return "SetString";
    case 0xA908:
      return "ShowHide";
    case 0xA909:
      return "CalcVis";
    case 0xA90A:
      return "CalcVBehind";
    case 0xA90B:
      return "ClipAbove";
    case 0xA90C:
      return "PaintOne";
    case 0xA90D:
      return "PaintBehind";
    case 0xA90E:
      return "SaveOld";
    case 0xA90F:
      return "DrawNew";
    case 0xA910:
      return "GetWMgrPort";
    case 0xA911:
      return "CheckUpDate";
    case 0xA912:
      return "InitWindows";
    case 0xA913:
      return "NewWindow";
    case 0xA914:
      return "DisposeWindow";
    case 0xA915:
      return "ShowWindow";
    case 0xA916:
      return "HideWindow";
    case 0xA917:
      return "GetWRefCon";
    case 0xA918:
      return "SetWRefCon";
    case 0xA919:
      return "GetWTitle";
    case 0xA91A:
      return "SetWTitle";
    case 0xA91B:
      return "MoveWindow";
    case 0xA91C:
      return "HiliteWindow";
    case 0xA91D:
      return "SizeWindow";
    case 0xA91E:
      return "TrackGoAway";
    case 0xA91F:
      return "SelectWindow";
    case 0xA920:
      return "BringToFront";
    case 0xA921:
      return "SendBehind";
    case 0xA922:
      return "BeginUpDate";
    case 0xA923:
      return "EndUpDate";
    case 0xA924:
      return "FrontWindow";
    case 0xA925:
      return "DragWindow";
    case 0xA926:
      return "DragTheRgn";
    case 0xA927:
      return "InvalRgn";
    case 0xA928:
      return "InvalRect";
    case 0xA929:
      return "ValidRgn";
    case 0xA92A:
      return "ValidRect";
    case 0xA92B:
      return "GrowWindow";
    case 0xA92C:
      return "FindWindow";
    case 0xA92D:
      return "CloseWindow";
    case 0xA92E:
      return "SetWindowPic";
    case 0xA92F:
      return "GetWindowPic";
    case 0xA953:
      return "UpdtControl";
    case 0xA954:
      return "NewControl";
    case 0xA955:
      return "DisposeControl";
    case 0xA956:
      return "KillControls";
    case 0xA957:
      return "ShowControl";
    case 0xA958:
      return "HideControl";
    case 0xA959:
      return "MoveControl";
    case 0xA95A:
      return "GetControlReference";
    case 0xA95B:
      return "SetControlReference";
    case 0xA95C:
      return "SizeControl";
    case 0xA95D:
      return "HiliteControl";
    case 0xA95E:
      return "GetControlTitle";
    case 0xA95F:
      return "SetControlTitle";
    case 0xA960:
      return "GetControlValue";
    case 0xA961:
      return "GetControlMinimum";
    case 0xA962:
      return "GetControlMaximum";
    case 0xA963:
      return "SetControlValue";
    case 0xA964:
      return "SetControlMinimum";
    case 0xA965:
      return "SetControlMaximum";
    case 0xA966:
      return "TestControl";
    case 0xA967:
      return "DragControl";
    case 0xA968:
      return "TrackControl";
    case 0xA969:
      return "DrawControls";
    case 0xA96A:
      return "GetControlAction";
    case 0xA96B:
      return "SetControlAction";
    case 0xA96C:
      return "FindControl";
    case 0xA96D:
      return "Draw1Control";
    case 0xA96E:
      return "Dequeue";
    case 0xA96F:
      return "Enqueue";
    case 0xA9B6:
      return "OpenDeskAcc";
    case 0xA9B7:
      return "CloseDeskAcc";
    case 0xA9B8:
      return "GetPattern";
    case 0xA9B9:
      return "GetCursor";
    case 0xA9BA:
      return "GetString";
    case 0xA9BB:
      return "GetIcon";
    case 0xA9BC:
      return "GetPicture";
    case 0xA9BD:
      return "GetNewWindow";
    case 0xA9BE:
      return "GetNewControl";
    case 0xA9BF:
      return "GetRMenu";
    case 0xA9C0:
      return "GetNewMBar";
    case 0xA9C1:
      return "UniqueID";
    case 0xA9C2:
      return "SysEdit";
    case 0xA9C4:
      return "OpenRFPerm";
    case 0xA9C5:
      return "RsrcMapEntry";
    case 0xA9C6:
      return "SecondsToDate";
    case 0xA9C7:
      return "DateToSeconds";
    case 0xA9C8:
      return "SysBeep";
    case 0xA9C9:
      return "SysError";
    case 0xA9CA:
      return "PutIcon";
    case 0xA9E0:
      return "Munger";
    case 0xA9E1:
      return "HandToHand";
    case 0xA9E2:
      return "PtrToXHand";
    case 0xA9E3:
      return "PtrToHand";
    case 0xA9E4:
      return "HandAndHand";
    case 0xA9E7:
      return "Pack0";
    case 0xA9E8:
      return "Pack1";
    case 0xA9E9:
      return "Pack2";
    case 0xA9EA:
      return "Pack3";
    case 0xA9EB:
      return "Pack4";
    case 0xA9EC:
      return "Pack5";
    case 0xA9ED:
      return "Pack6";
    case 0xA9EE:
      return "Pack7";
    case 0xA9EF:
      return "PtrAndHand";
    case 0xA9F0:
      return "LoadSeg";
    case 0xA9F1:
      return "UnLoadSeg";
    case 0xA9F2:
      return "Launch";
    case 0xA9F3:
      return "Chain";
    case 0xA9F4:
      return "ExitToShell";
    case 0xA9F5:
      return "GetAppParms";
    case 0xA9F6:
      return "GetResFileAttrs";
    case 0xA9F7:
      return "SetResFileAttrs";
    case 0xA9F8:
      return "MethodDispatch";
    case 0xA9F9:
      return "InfoScrap";
    case 0xA9FA:
      return "UnloadScrap";
    case 0xA9FB:
      return "LoadScrap";
    case 0xA9FC:
      return "ZeroScrap";
    case 0xA9FD:
      return "GetScrap";
    case 0xA9FE:
      return "PutScrap";
    case 0xA9FF:
      return "Debugger";
    case 0xABEB:
      return "DisplayDispatch";
    case 0xABC9:
      return "IconDispatch";
    case 0xABF2:
      return "ThreadDispatch";
    case 0xAA53:
      return "DictionaryDispatch";
    case 0xABFF:
      return "DebugStr";
    case 0xA04E:
      return "AddDrive";
    case 0xA04F:
      return "RDrvrInstall";
    case 0xA056:
      return "LowerText";
    case 0xA054:
      return "UprString";
    case 0xA057:
      return "SetAppBase";
    case 0xA198:
      return "HWPriv";
    case 0xA256:
      return "StripText";
    case 0xA456:
      return "UpperText";
    case 0xA656:
      return "StripUpperText";
    case 0xA88F:
      return "OSDispatch";
    case 0xA050:
      return "CompareString";
    case 0xA051:
      return "ReadXPRam";
    case 0xA052:
      return "WriteXPRam";
    case 0xA058:
      return "InsTime";
    case 0xA458:
      return "InsXTime";
    case 0xA059:
      return "RmvTime";
    case 0xA05A:
      return "PrimeTime";
    case 0xA193:
      return "Microseconds";
    case 0xA05B:
      return "PowerOff";
    case 0xA061:
      return "MaxBlock";
    case 0xA162:
      return "PurgeSpace";
    case 0xA562:
      return "PurgeSpaceSys";
    case 0xA063:
      return "MaxApplZone";
    case 0xA064:
      return "MoveHHi";
    case 0xA065:
      return "StackSpace";
    case 0xA166:
      return "NewEmptyHandle";
    case 0xA067:
      return "HSetRBit";
    case 0xA068:
      return "HClrRBit";
    case 0xA069:
      return "HGetState";
    case 0xA06A:
      return "HSetState";
    case 0xA06C:
      return "InitFS";
    case 0xA06D:
      return "InitEvents";
    case 0xA055:
      return "StripAddress";
    case 0xA091:
      return "Translate24To32";
    case 0xA05D:
      return "SwapMMUMode";
    case 0xA06F:
      return "SlotVInstall";
    case 0xA070:
      return "SlotVRemove";
    case 0xA071:
      return "AttachVBL";
    case 0xA072:
      return "DoVBLTask";
    case 0xA075:
      return "SIntInstall";
    case 0xA076:
      return "SIntRemove";
    case 0xA077:
      return "CountADBs";
    case 0xA078:
      return "GetIndADB";
    case 0xA079:
      return "GetADBInfo";
    case 0xA07A:
      return "SetADBInfo";
    case 0xA07B:
      return "ADBReInit";
    case 0xA07C:
      return "ADBOp";
    case 0xA0AE:
      return "VADBProc";
    case 0xA07D:
      return "GetDefaultStartup";
    case 0xA07E:
      return "SetDefaultStartup";
    case 0xA07F:
      return "InternalWait";
    case 0xA80C:
      return "RGetResource";
    case 0xA080:
      return "GetVideoDefault";
    case 0xA081:
      return "SetVideoDefault";
    case 0xA082:
      return "DTInstall";
    case 0xA083:
      return "SetOSDefault";
    case 0xA084:
      return "GetOSDefault";
    case 0xA086:
      return "IOPInfoAccess";
    case 0xA087:
      return "IOPMsgRequest";
    case 0xA088:
      return "IOPMoveData";
    case 0xAA27:
      return "GetMaxDevice";
    case 0xAA28:
      return "GetCTSeed";
    case 0xAA29:
      return "GetDeviceList";
    case 0xAA2A:
      return "GetMainDevice";
    case 0xAA2B:
      return "GetNextDevice";
    case 0xAA2C:
      return "TestDeviceAttribute";
    case 0xAA2D:
      return "SetDeviceAttribute";
    case 0xAA2E:
      return "InitGDevice";
    case 0xAA2F:
      return "NewGDevice";
    case 0xAA30:
      return "DisposeGDevice";
    case 0xAA31:
      return "SetGDevice";
    case 0xAA32:
      return "GetGDevice";
    case 0xAA39:
      return "MakeITable";
    case 0xAA3A:
      return "AddSearch";
    case 0xAA3B:
      return "AddComp";
    case 0xAA3C:
      return "SetClientID";
    case 0xAA3D:
      return "ProtectEntry";
    case 0xAA3E:
      return "ReserveEntry";
    case 0xAA3F:
      return "SetEntries";
    case 0xAA40:
      return "QDError";
    case 0xAA49:
      return "SaveEntries";
    case 0xAA4A:
      return "RestoreEntries";
    case 0xAA4C:
      return "DelSearch";
    case 0xAA4D:
      return "DelComp";
    case 0xAA4E:
      return "SetStdCProcs";
    case 0xABF8:
      return "StdOpcodeProc";
    case 0xAA41:
      return "SetWinColor";
    case 0xAA42:
      return "GetAuxWin";
    case 0xAA43:
      return "SetControlColor";
    case 0xAA44:
      return "GetAuxiliaryControlRecord";
    case 0xAA45:
      return "NewCWindow";
    case 0xAA46:
      return "GetNewCWindow";
    case 0xAA47:
      return "SetDeskCPat";
    case 0xAA48:
      return "GetCWMgrPort";
    case 0xA809:
      return "GetControlVariant";
    case 0xA80A:
      return "GetWVariant";
    case 0xAA60:
      return "DeleteMCEntries";
    case 0xAA61:
      return "GetMCInfo";
    case 0xAA62:
      return "SetMCInfo";
    case 0xAA63:
      return "DisposeMCInfo";
    case 0xAA64:
      return "GetMCEntry";
    case 0xAA65:
      return "SetMCEntries";
    case 0xAA68:
      return "DialogDispatch";
    case 0xA814:
      return "SetFractEnable";
    case 0xA854:
      return "FontDispatch";
    case 0xA06E:
      return "SlotManager";
    case 0xA8B5:
      return "ScriptUtil";
    case 0xA089:
      return "SCSIAtomic";
    case 0xA815:
      return "SCSIDispatch";
    case 0xA83F:
      return "Long2Fix";
    case 0xA840:
      return "Fix2Long";
    case 0xA841:
      return "Fix2Frac";
    case 0xA842:
      return "Frac2Fix";
    case 0xA843:
      return "Fix2X";
    case 0xA844:
      return "X2Fix";
    case 0xA845:
      return "Frac2X";
    case 0xA846:
      return "X2Frac";
    case 0xA847:
      return "FracCos";
    case 0xA848:
      return "FracSin";
    case 0xA849:
      return "FracSqrt";
    case 0xA84A:
      return "FracMul";
    case 0xA84B:
      return "FracDiv";
    case 0xA84D:
      return "FixDiv";
    case 0xA05E:
      return "NMInstall";
    case 0xA05F:
      return "NMRemove";
    case 0xAB1D:
      return "QDExtensions";
    case 0xA82A:
      return "ComponentDispatch";
    case 0xAAA3:
      return "CodecDispatch";
    case 0xAA56:
      return "SpeechRecognitionDispatch";
    case 0xAA57:
      return "DockingDispatch";
    case 0xAA59:
      return "MixedModeDispatch";
    case 0xAA5A:
      return "CodeFragmentDispatch";
    case 0xABFC:
      return "TranslationDispatch";
    case 0xAA54:
      return "TextServicesDispatch";
    case 0xAADB:
      return "CursorDeviceDispatch";
    case 0xABE0:
      return "QDExtensions2";
    case 0xAA5C:
      return "OCEUtils";
    case 0xAA5D:
      return "DigitalSignature";
    case 0xAA5E:
      return "TBDispatch";
    case 0xAAF2:
      return "ControlStripDispatch";
    case 0xAAF3:
      return "ExpansionManager";
    case 0xA09E:
      return "PowerMgrDispatch";
    case 0xA094:
      return "ServerDispatch";
    case 0xA825:
      return "MenuDispatch";
    case 0xAA73:
      return "ControlDispatch";
    case 0xAA74:
      return "AppearanceDispatch";
    case 0xABED:
      return "DragDispatch";
    case 0xAA7E:
      return "SysDebugDispatch";
    case 0xAA80:
      return "AVLTreeDispatch";
    case 0xAA81:
      return "FileMappingDispatch";
    case 0xA826:
      return "MenuManager::InsertMenuItem";
    case 0xA930:
      return "MenuManager::InitMenus";
    case 0xA931:
      return "MenuManager::NewMenu";
    case 0xA932:
      return "MenuManager::DisposeMenu";
    case 0xA933:
      return "MenuManager::AppendMenu";
    case 0xA934:
      return "MenuManager::ClearMenuBar";
    case 0xA935:
      return "MenuManager::InsertMenu";
    case 0xA936:
      return "MenuManager::DeleteMenu";
    case 0xA937:
      return "MenuManager::DrawMenuBar";
    case 0xA81D:
      return "MenuManager::InvalMenuBar";
    case 0xA938:
      return "MenuManager::HiliteMenu";
    case 0xA939:
      return "MenuManager::EnableItem";
    case 0xA93A:
      return "MenuManager::DisableItem";
    case 0xA93B:
      return "MenuManager::GetMenuBar";
    case 0xA93C:
      return "MenuManager::SetMenuBar";
    case 0xA93D:
      return "MenuManager::MenuSelect";
    case 0xA93E:
      return "MenuManager::MenuKey";
    case 0xA93F:
      return "MenuManager::GetItmIcon";
    case 0xA940:
      return "MenuManager::SetItmIcon";
    case 0xA941:
      return "MenuManager::GetItmStyle";
    case 0xA942:
      return "MenuManager::SetItmStyle";
    case 0xA943:
      return "MenuManager::GetItmMark";
    case 0xA944:
      return "MenuManager::SetItmMark";
    case 0xA945:
      return "MenuManager::CheckItem";
    case 0xA946:
      return "MenuManager::GetMenuItemText";
    case 0xA947:
      return "MenuManager::SetMenuItemText";
    case 0xA948:
      return "MenuManager::CalcMenuSize";
    case 0xA949:
      return "MenuManager::GetMenuHandle";
    case 0xA94A:
      return "MenuManager::SetMFlash";
    case 0xA94B:
      return "MenuManager::PlotIcon";
    case 0xA94C:
      return "MenuManager::FlashMenuBar";
    case 0xA94D:
      return "MenuManager::AppendResMenu";
    case 0xA94E:
      return "MenuManager::PinRect";
    case 0xA94F:
      return "MenuManager::DeltaPoint";
    case 0xA950:
      return "MenuManager::CountMItems";
    case 0xA951:
      return "MenuManager::InsertResMenu";
    case 0xA952:
      return "MenuManager::DeleteMenuItem";
    case 0xA808:
      return "MenuManager::InitProcMenu";
    case 0xA84E:
      return "MenuManager::GetItemCmd";
    case 0xA84F:
      return "MenuManager::SetItemCmd";
    case 0xA80B:
      return "MenuManager::PopUpMenuSelect";
    case 0xA860:
      return "EventManager::WaitNextEvent";
    case 0xA970:
      return "EventManager::GetNextEvent";
    case 0xA971:
      return "EventManager::EventAvail";
    case 0xA972:
      return "EventManager::GetMouse";
    case 0xA973:
      return "EventManager::StillDown";
    case 0xA974:
      return "EventManager::Button";
    case 0xA975:
      return "EventManager::TickCount";
    case 0xA976:
      return "EventManager::GetKeys";
    case 0xA977:
      return "EventManager::WaitMouseUp";
    case 0xA02F:
      return "EventManager::PostEvent";
    case 0xA12F:
      return "EventManager::PPostEvent";
    case 0xA030:
      return "EventManager::OSEventAvail";
    case 0xA031:
      return "EventManager::GetOSEvent";
    case 0xA032:
      return "EventManager::FlushEvents";
    case 0xA033:
      return "EventManager::VInstall";
    case 0xA034:
      return "EventManager::VRemove";
    case 0xA035:
      return "EventManager::OffLine";
    case 0xA036:
      return "EventManager::MoreMasters";
    case 0xA038:
      return "EventManager::WriteParam";
    case 0xA039:
      return "EventManager::ReadDateTime";
    case 0xA03A:
      return "EventManager::SetDateTime";
    case 0xA03B:
      return "EventManager::Delay";
    case 0xA03C:
      return "EventManager::CmpString";
    case 0xA03D:
      return "EventManager::DrvrInstall";
    case 0xA03E:
      return "EventManager::DrvrRemove";
    case 0xA03F:
      return "EventManager::InitUtil";
    case 0xA040:
      return "EventManager::ResrvMem";
    case 0xA9C3:
      return "EventManager::KeyTranslate";
    case 0xA978:
      return "DialogManager::UpdtDialog";
    case 0xA97B:
      return "DialogManager::InitDialogs";
    case 0xA97C:
      return "DialogManager::GetNewDialog";
    case 0xA97D:
      return "DialogManager::NewDialog";
    case 0xA97E:
      return "DialogManager::SelectDialogItemText";
    case 0xA97F:
      return "DialogManager::IsDialogEvent";
    case 0xA980:
      return "DialogManager::DialogSelect";
    case 0xA981:
      return "DialogManager::DrawDialog";
    case 0xA982:
      return "DialogManager::CloseDialog";
    case 0xA983:
      return "DialogManager::DisposeDialog";
    case 0xA984:
      return "DialogManager::FindDialogItem";
    case 0xA985:
      return "DialogManager::Alert";
    case 0xA986:
      return "DialogManager::StopAlert";
    case 0xA987:
      return "DialogManager::NoteAlert";
    case 0xA988:
      return "DialogManager::CautionAlert";
    case 0xA98B:
      return "DialogManager::ParamText";
    case 0xA98C:
      return "DialogManager::ErrorSound";
    case 0xA98D:
      return "DialogManager::GetDialogItem";
    case 0xA98E:
      return "DialogManager::SetDialogItem";
    case 0xA98F:
      return "DialogManager::SetDialogItemText";
    case 0xA990:
      return "DialogManager::GetDialogItemText";
    case 0xA991:
      return "DialogManager::ModalDialog";
    case 0xAA4B:
      return "DialogManager::NewColorDialog";
    case 0xAA66:
      return "DialogManager::MenuChoice";
    case 0xAA67:
      return "DialogManager::ModalDialogMenuSetup";
    case 0xA9B2:
      return "System::SystemEvent";
    case 0xA9B3:
      return "System::SystemClick";
    case 0xA9B4:
      return "System::SystemTask";
    case 0xA9B5:
      return "System::SystemMenu";
    case 0xA9E5:
      return "PackageManager::InitPack";
    case 0xA9E6:
      return "PackageManager::InitAllPacks";
    case 0xA823:
      return "AliasManager::AliasDispatch";
    case 0xA000:
      return "DeviceManager::Open";
    case 0xA001:
      return "DeviceManager::Close";
    case 0xA002:
      return "DeviceManager::Read";
    case 0xA003:
      return "DeviceManager::Write";
    case 0xA004:
      return "DeviceManager::Control";
    case 0xA005:
      return "DeviceManager::Status";
    case 0xA006:
      return "DeviceManager::KillIO";
    case 0xA007:
      return "FileManager::GetVolInfo";
    case 0xA008:
      return "FileManager::Create";
    case 0xA009:
      return "FileManager::Delete";
    case 0xA00A:
      return "FileManager::OpenRF";
    case 0xA00B:
      return "FileManager::Rename";
    case 0xA00C:
      return "FileManager::GetFileInfo";
    case 0xA00D:
      return "FileManager::SetFileInfo";
    case 0xA00E:
      return "FileManager::UnmountVol";
    case 0xA20E:
      return "FileManager::HUnmountVol";
    case 0xA00F:
      return "FileManager::MountVol";
    case 0xA010:
      return "FileManager::Allocate";
    case 0xA011:
      return "FileManager::GetEOF";
    case 0xA012:
      return "FileManager::SetEOF";
    case 0xA013:
      return "FileManager::FlushVol";
    case 0xA014:
      return "FileManager::GetVol";
    case 0xA015:
      return "FileManager::SetVol";
    case 0xA016:
      return "FileManager::FInitQueue";
    case 0xA017:
      return "FileManager::Eject";
    case 0xA018:
      return "FileManager::GetFPos";
    case 0xA041:
      return "FileManager::SetFilLock";
    case 0xA042:
      return "FileManager::RstFilLock";
    case 0xA043:
      return "FileManager::SetFilType";
    case 0xA044:
      return "FileManager::SetFPos";
    case 0xA045:
      return "FileManager::FlushFile";
    case 0xA200:
      return "FileManager::HOpen";
    case 0xA207:
      return "FileManager::HGetVInfo";
    case 0xA208:
      return "FileManager::HCreate";
    case 0xA209:
      return "FileManager::HDelete";
    case 0xA20A:
      return "FileManager::HOpenRF";
    case 0xA20B:
      return "FileManager::HRename";
    case 0xA20C:
      return "FileManager::HGetFileInfo";
    case 0xA20D:
      return "FileManager::HSetFileInfo";
    case 0xA210:
      return "FileManager::AllocContig";
    case 0xA215:
      return "FileManager::HSetVol";
    case 0xA214:
      return "FileManager::HGetVol";
    case 0xA241:
      return "FileManager::HSetFLock";
    case 0xA242:
      return "FileManager::HRstFLock";
    case 0xA060:
      return "FileManager::FSDispatch";
    case 0xA260:
      return "FileManager::HFSDispatch";
    case 0xAA52:
      return "FileManager::HighLevelFSDispatch";
    case 0xA019:
      return "MemoryManager::InitZone";
    case 0xA11A:
      return "MemoryManager::GetZone";
    case 0xA01B:
      return "MemoryManager::SetZone";
    case 0xA01C:
      return "MemoryManager::FreeMem";
    case 0xA11D:
      return "MemoryManager::MaxMem";
    case 0xA11E:
      return "MemoryManager::NewPtr";
    case 0xA51E:
      return "MemoryManager::NewPtrSys";
    case 0xA31E:
      return "MemoryManager::NewPtrClear";
    case 0xA71E:
      return "MemoryManager::NewPtrSysClear";
    case 0xA01F:
      return "MemoryManager::DisposePtr";
    case 0xA020:
      return "MemoryManager::SetPtrSize";
    case 0xA021:
      return "MemoryManager::GetPtrSize";
    case 0xA122:
      return "MemoryManager::NewHandle";
    case 0xA522:
      return "MemoryManager::NewHandleSys";
    case 0xA322:
      return "MemoryManager::NewHandleClear";
    case 0xA722:
      return "MemoryManager::NewHandleSysClear";
    case 0xA023:
      return "MemoryManager::DisposeHandle";
    case 0xA024:
      return "MemoryManager::SetHandleSize";
    case 0xA025:
      return "MemoryManager::GetHandleSize";
    case 0xA126:
      return "MemoryManager::HandleZone";
    case 0xA027:
      return "MemoryManager::ReallocHandle";
    case 0xA128:
      return "MemoryManager::RecoverHandle";
    case 0xA029:
      return "MemoryManager::HLock";
    case 0xA02A:
      return "MemoryManager::HUnlock";
    case 0xA02B:
      return "MemoryManager::EmptyHandle";
    case 0xA02C:
      return "MemoryManager::InitApplZone";
    case 0xA02D:
      return "MemoryManager::SetApplLimit";
    case 0xA02E:
      return "MemoryManager::BlockMove";
    case 0xA22E:
      return "MemoryManager::BlockMoveData";
    case 0xA05C:
      return "MemoryManager::MemoryDispatch";
    case 0xA15C:
      return "MemoryManager::MemoryDispatchA0Result";
    case 0xA08F:
      return "MemoryManager::DeferUserFn";
    case 0xA08D:
      return "MemoryManager::DebugUtil";
    case 0xA0A4:
      return "MemoryManager::HeapDispatch";
    case 0xA148:
      return "MemoryManager::PtrZone";
    case 0xA049:
      return "MemoryManager::HPurge";
    case 0xA04A:
      return "MemoryManager::HNoPurge";
    case 0xA04B:
      return "MemoryManager::SetGrowZone";
    case 0xA04C:
      return "MemoryManager::CompactMem";
    case 0xA04D:
      return "MemoryManager::PurgeMem";
    case 0xA146:
      return "TrapManager::GetTrapAddress";
    case 0xA047:
      return "TrapManager::SetTrapAddress";
    case 0xA346:
      return "TrapManager::GetOSTrapAddress";
    case 0xA247:
      return "TrapManager::SetOSTrapAddress";
    case 0xA746:
      return "TrapManager::GetToolBoxTrapAddress";
    case 0xA647:
      return "TrapManager::SetToolBoxTrapAddress";
    case 0xA09F:
      return "PowerManager::PowerDispatch";
    case 0xA085:
      return "PowerManager::PMgrOp";
    case 0xA285:
      return "PowerManager::IdleUpdate";
    case 0xA485:
      return "PowerManager::IdleState";
    case 0xA685:
      return "PowerManager::SerialPower";
    case 0xA08A:
      return "PowerManager::Sleep";
    case 0xA28A:
      return "PowerManager::SlpQInstall";
    case 0xA48A:
      return "PowerManager::SlpQRemove";
    case 0xA08B:
      return "PowerManager::CommToolboxDispatch";
    case 0xA090:
      return "GestaltManager::SysEnvirons";
    case 0xA1AD:
      return "GestaltManager::Gestalt";
    case 0xA3AD:
      return "GestaltManager::NewGestalt";
    case 0xA5AD:
      return "GestaltManager::ReplaceGestalt";
    case 0xA7AD:
      return "GestaltManager::GetGestaltProcPtr";
    case 0xABF1:
      return "GestaltManager::GestaltValueDispatch";
    case 0xAA00:
      return "ColorQuickDraw::OpenCPort";
    case 0xAA01:
      return "ColorQuickDraw::InitCPort";
    case 0xAA02:
      return "ColorQuickDraw::CloseCPort";
    case 0xAA03:
      return "ColorQuickDraw::NewPixMap";
    case 0xAA04:
      return "ColorQuickDraw::DisposePixMap";
    case 0xAA05:
      return "ColorQuickDraw::CopyPixMap";
    case 0xAA06:
      return "ColorQuickDraw::SetPortPix";
    case 0xAA07:
      return "ColorQuickDraw::NewPixPat";
    case 0xAA08:
      return "ColorQuickDraw::DisposePixPat";
    case 0xAA09:
      return "ColorQuickDraw::CopyPixPat";
    case 0xAA0A:
      return "ColorQuickDraw::PenPixPat";
    case 0xAA0B:
      return "ColorQuickDraw::BackPixPat";
    case 0xAA0C:
      return "ColorQuickDraw::GetPixPat";
    case 0xAA0D:
      return "ColorQuickDraw::MakeRGBPat";
    case 0xAA0E:
      return "ColorQuickDraw::FillCRect";
    case 0xAA0F:
      return "ColorQuickDraw::FillCOval";
    case 0xAA10:
      return "ColorQuickDraw::FillCRoundRect";
    case 0xAA11:
      return "ColorQuickDraw::FillCArc";
    case 0xAA12:
      return "ColorQuickDraw::FillCRgn";
    case 0xAA13:
      return "ColorQuickDraw::FillCPoly";
    case 0xAA14:
      return "ColorQuickDraw::RGBForeColor";
    case 0xAA15:
      return "ColorQuickDraw::RGBBackColor";
    case 0xAA16:
      return "ColorQuickDraw::SetCPixel";
    case 0xAA17:
      return "ColorQuickDraw::GetCPixel";
    case 0xAA18:
      return "ColorQuickDraw::GetCTable";
    case 0xAA19:
      return "ColorQuickDraw::GetForeColor";
    case 0xAA1A:
      return "ColorQuickDraw::GetBackColor";
    case 0xAA1B:
      return "ColorQuickDraw::GetCCursor";
    case 0xAA1C:
      return "ColorQuickDraw::SetCCursor";
    case 0xAA1D:
      return "ColorQuickDraw::AllocCursor";
    case 0xAA1E:
      return "ColorQuickDraw::GetCIcon";
    case 0xAA1F:
      return "ColorQuickDraw::PlotCIcon";
    case 0xAA20:
      return "ColorQuickDraw::OpenCPicture";
    case 0xAA21:
      return "ColorQuickDraw::OpColor";
    case 0xAA22:
      return "ColorQuickDraw::HiliteColor";
    case 0xAA23:
      return "ColorQuickDraw::CharExtra";
    case 0xAA24:
      return "ColorQuickDraw::DisposeCTable";
    case 0xAA25:
      return "ColorQuickDraw::DisposeCIcon";
    case 0xAA26:
      return "ColorQuickDraw::DisposeCCursor";
    case 0xAA50:
      return "ColorQuickDraw::SeedCFill";
    case 0xAA4F:
      return "ColorQuickDraw::CalcCMask";
    case 0xAA51:
      return "ColorQuickDraw::CopyDeepMask";
    case 0xABCA:
      return "ColorManager::DeviceLoop";
    case 0xAA33:
      return "ColorManager::Color2Index";
    case 0xAA34:
      return "ColorManager::Index2Color";
    case 0xAA35:
      return "ColorManager::InvertColor";
    case 0xAA36:
      return "ColorManager::RealColor";
    case 0xAA37:
      return "ColorManager::GetSubTable";
    case 0xAA38:
      return "ColorManager::UpdatePixMap";
    case 0xAA90:
      return "PaletteManager::InitPalettes";
    case 0xAA91:
      return "PaletteManager::NewPalette";
    case 0xAA92:
      return "PaletteManager::GetNewPalette";
    case 0xAA93:
      return "PaletteManager::DisposePalette";
    case 0xAA94:
      return "PaletteManager::ActivatePalette";
    case 0xAA95:
      return "PaletteManager::NSetPalette";
    case 0xAA96:
      return "PaletteManager::GetPalette";
    case 0xAA97:
      return "PaletteManager::PmForeColor";
    case 0xAA98:
      return "PaletteManager::PmBackColor";
    case 0xAA99:
      return "PaletteManager::AnimateEntry";
    case 0xAA9A:
      return "PaletteManager::AnimatePalette";
    case 0xAA9B:
      return "PaletteManager::GetEntryColor";
    case 0xAA9C:
      return "PaletteManager::SetEntryColor";
    case 0xAA9D:
      return "PaletteManager::GetEntryUsage";
    case 0xAA9E:
      return "PaletteManager::SetEntryUsage";
    case 0xAA9F:
      return "PaletteManager::CTab2Palette";
    case 0xAAA0:
      return "PaletteManager::Palette2CTab";
    case 0xAAA1:
      return "PaletteManager::CopyPalette";
    case 0xAAA2:
      return "PaletteManager::PaletteDispatch";
    case 0xA092:
      return "SoundManager::EgretDispatch";
    case 0xA800:
      return "SoundManager::SoundDispatch";
    case 0xA801:
      return "SoundManager::SndDisposeChannel";
    case 0xA802:
      return "SoundManager::SndAddModifier";
    case 0xA803:
      return "SoundManager::SndDoCommand";
    case 0xA804:
      return "SoundManager::SndDoImmediate";
    case 0xA805:
      return "SoundManager::SndPlay";
    case 0xA806:
      return "SoundManager::SndControl";
    case 0xA807:
      return "SoundManager::SndNewChannel";
    case 0xABF6:
      return "CollectionManager::CollectionMgr";
    case 0xAAA4:
      return "AppleLocationManger::ALMDispatch";
    case 0xA0AC:
      return "FileSystemManager::FSMDispatch";
    case 0xA824:
      return "FileSystemManager::HFSUtilDispatch";

    default:
      return {};
  }
}
